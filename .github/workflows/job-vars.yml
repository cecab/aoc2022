name: Testing Vars
env:
  var_a: 'Value-A'

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:
    inputs:
      review-env:
        description: Target Review Location?
        required: true
        type: choice
        options:
          - cad-designer-a.flowniq.com
          - cad-designer-b.flowniq.com
          - cad-designer-c.flowniq.com    
    
  workflow_call:
    inputs:
      review-env:
        description: Target Review Location?
        required: true
        type: choice
        options:
          - cad-designer-a.flowniq.com
          - cad-designer-b.flowniq.com
          - cad-designer-c.flowniq.com

      extra:
        description: 'Extra'
        required: true
        type: string
        default: defaultExtra
jobs:
  job-tip:
    name: "Getting commit message for skipping them"
    runs-on: ubuntu-latest
    outputs:
      HEAD_TIP: ${{ steps.get-tip.outputs.tip_m }}
    steps:
      - name: Get the tip
        id: get-tip
        run: echo "tip_m=`echo ${{ github.event.head_commit.message }} | grep 'be skip' || echo 'do_deploy'`" >> $GITHUB_OUTPUT
      
  job-1:
    name: "My first job with $var_a"
    runs-on: ubuntu-latest
    needs: job-tip
    if: needs.job-tip.outputs.HEAD_TIP == 'do_deploy'
    steps:
      - name: Ge review ID
        id: review-name
        run: |
          echo "review_id=`echo ${{ inputs.review-env }} | sed -e 's/.*designer-\([a-z]*\).*/\1/g'`" >> $GITHUB_OUTPUT      
      - name: Get the tip
        id: get-tip
        run: echo "tip_m=`echo ${{ github.event.head_commit.message }} | grep 'be skip' || echo 'do_deploy'`" >> $GITHUB_OUTPUT
      
      - run: |
          echo "Env choosen ${{ steps.review-name.outputs.review_id }}"
          echo "Hi job-1: var_a = $var_a"
          echo "inputs.extra: ${{inputs.extra}}"

      - run: |
          echo "Latest message: ${{ steps.get-tip.outputs.tip_m }}"
      - run: |
          echo "From other job: ${{ needs.job-tip.outputs.HEAD_TIP }}"
      - name: Compile and Deploy
        if: ${{ steps.get-tip.outputs.tip_m == 'do_deploy' }}
        run: |
          echo "Compiling...with gcc"
          
          
        
